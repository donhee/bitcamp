// 상속 - super class에 기본 생성자가 없을 때
package step11.ex7;

public class Exam01 {
    public static void main(String[] args) {
        B obj = new B();
        System.out.printf("obj.v1=%d, obj.v2=%d\n", obj.v1, obj.v2);
    
        // 생성자 호출 순서
        // 1) C 클래스의 생성자를 호출하면,
        //    그 생성자의 첫 번째 문장이 수퍼 클래스의 생성자를 호출하는 명령이다.
        //    그래서 수퍼 클래스인 B 클래스의 생성자를 호출한다.
        // 2) B 클래스의 생성자를 호출하면,
        //    그 생성자의 첫 번째 문장이 수퍼 클래스의 생성자를 호출하는 명령이다.
        //    그래서 수퍼 클래스인 A 클래스의 생성자를 호출한다.
        // 3) A 클래스의 생성자를 호출하면,
        //    그 생성자의 첫 번째 문장이 수퍼 클래스의 생성자를 호출하는 명령이다.
        //    그래서 수퍼 클래스 Object의 생성자를 호출한다.
        // 4) Object 클래스의 생성자를 호출하면
        //    더 이상 수퍼 클래스가 없기 때문에 Object() 생성자를 실행한다.
        //    그리고 이 생성자를 호출한 A 클래스의 생성자로 리턴한다.
        // 5) A 클래스의 생성자를 실행한 후
        //    이 생성자를 호출한 B 클래스의 생성자로 리턴한다.
        // 6) B 클래스의 생성자를 실행한 후
        //    이 생성자를 호출한 C 클래스의 생성자로 리턴한다.
        // 7) C 클래스의 생성자를 실행한다.
    }
}


